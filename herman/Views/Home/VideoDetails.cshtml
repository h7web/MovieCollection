@model herman.Models.VideoViewModel

@{
    ViewBag.Title = "VideoDetails";

    var vcl = Model.VideoCastList;
}

<h2>Video Details</h2>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dd>
            @if (Model.Box_Cover.Contains("https"))
            {
                <img src="@Html.DisplayFor(model => model.Box_Cover)" class="cover" />
            }
            else
            {
                <img src="http://h7.hopto.org/herman/images/@Html.DisplayFor(model => model.Box_Cover)" class="cover" />
            }
        </dd>
        <dd>
            @Html.DisplayFor(model => model.Video_Name) - (@Html.DisplayFor(model => model.Release_Date))
        </dd>

        <dd class="formatcolumn">
            @Html.Raw(FormatHelper.GetMediaFormat(Model.VHS, "VHS"))
            @Html.Raw(FormatHelper.GetMediaFormat(Model.DVD, "DVD"))
            @Html.Raw(FormatHelper.GetMediaFormat(Model.BLURAY, "BLURAY"))
            @Html.Raw(FormatHelper.GetMediaFormat(Model.DIGITAL, "DIGITAL"))
        </dd>

        <dd>
            @Html.DisplayFor(model => model.dir_fullname)
        </dd>

        <dd>
            @Html.DisplayFor(model => model.length) min
        </dd>

        <dd>
            @Html.Raw(FormatHelper.GetRatingFormat(Model.rating))
        </dd>

        <dd>
            @Html.DisplayFor(model => model.category_name)
        </dd>

        <dd>
            @Html.DisplayFor(model => model.Plot)
        </dd>

    </dl>
</div>
<div>
    <dl class="dl-horizontal">
@foreach (var item in vcl)
{
    <dd>
<a href='@Url.Action("ViewActor","Home", new { id = item.actor.actor_id })'>
<img src=http://h7.hopto.org/herman/actors/@item.actor.actor_photo class=actor /></a>
@item.actor.actor_fullname;
. . . . . 
@item.character.char_fullname;
    </dd>
}
        </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
    @Html.ActionLink("Back to List", "Index")
</p>
